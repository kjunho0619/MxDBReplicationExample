// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package databasereplication.actions;

import java.util.Date;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import databasereplication.proxies.ScheduledImportActivity;
import com.mendix.webui.CustomJavaAction;

/**
 * This Java action executes the microflow: "ProcessActivitySet" in a new subtransaction
 */
public class ImportActivitySet extends CustomJavaAction<java.lang.Boolean>
{
	private final IMendixObject Activity;

	public ImportActivitySet(
		IContext context,
		IMendixObject _activity
	)
	{
		super(context);
		this.Activity = _activity;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext context = Core.createSystemContext();
		context.startTransaction();

		try {
			Core.microflowCall("DatabaseReplication.ProcessActivitySet")
				.withParam("ImportActivity", this.Activity)
				.withParam("StartDate", new Date())
				.execute(context);
			context.endTransaction();
		}
		catch (Exception e) {
			context.rollbackTransaction();
			Core.getLogger(this.toString()).error( "Failed importing activityset: " + this.Activity.getValue(this.getContext(), ScheduledImportActivity.MemberNames.SortOrder.toString()), e);
		}

		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ImportActivitySet";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
